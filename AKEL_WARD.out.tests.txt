-- The CXX compiler identification is GNU 10.2.1
-- The C compiler identification is GNU 10.2.1
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jube/Univ/theorie_des_langages/projet/corr/2022/sandbox-tests/build
Scanning dependencies of target testfa
[ 25%] Building CXX object CMakeFiles/testfa.dir/Automaton.cc.o
[ 50%] Building CXX object CMakeFiles/testfa.dir/testfa.cc.o
[ 75%] Building CXX object CMakeFiles/testfa.dir/googletest/googletest/src/gtest-all.cc.o
[100%] Linking CXX executable testfa
[100%] Built target testfa
==248276== Memcheck, a memory error detector
==248276== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==248276== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==248276== Command: ./testfa
==248276== 
Initial states:
	1 
Final states:
	1 4 7 
Transitions:
	For state 1:
		For letter a: 2 
		For letter b: 3 5 
		For letter c: 6 
	For state 2:
		For letter a: 
		For letter b: 4 
		For letter c: 
	For state 3:
		For letter a: 
		For letter b: 
		For letter c: 4 
	For state 4:
		For letter a: 2 
		For letter b: 3 5 
		For letter c: 6 
	For state 5:
		For letter a: 
		For letter b: 7 
		For letter c: 
	For state 6:
		For letter a: 7 
		For letter b: 
		For letter c: 
	For state 7:
		For letter a: 
		For letter b: 5 
		For letter c: 6 
[==========] Running 160 tests from 33 test suites.
[----------] Global test environment set-up.
[----------] 1 test from AutomatonExampleTest
[ RUN      ] AutomatonExampleTest.isValid
[       OK ] AutomatonExampleTest.isValid (3 ms)
[----------] 1 test from AutomatonExampleTest (5 ms total)

[----------] 4 tests from AutomatonAddSymbolTest
[ RUN      ] AutomatonAddSymbolTest.AddSymbol
[       OK ] AutomatonAddSymbolTest.AddSymbol (3 ms)
[ RUN      ] AutomatonAddSymbolTest.AddSymbolEpsilon
[       OK ] AutomatonAddSymbolTest.AddSymbolEpsilon (0 ms)
[ RUN      ] AutomatonAddSymbolTest.AddSymbolNotPrintable
[       OK ] AutomatonAddSymbolTest.AddSymbolNotPrintable (0 ms)
[ RUN      ] AutomatonAddSymbolTest.AddSymbolAlreadyPresent
[       OK ] AutomatonAddSymbolTest.AddSymbolAlreadyPresent (0 ms)
[----------] 4 tests from AutomatonAddSymbolTest (5 ms total)

[----------] 2 tests from AutomatonHasSymbolTest
[ RUN      ] AutomatonHasSymbolTest.hasSymbol
[       OK ] AutomatonHasSymbolTest.hasSymbol (1 ms)
[ RUN      ] AutomatonHasSymbolTest.NoSymbol
[       OK ] AutomatonHasSymbolTest.NoSymbol (0 ms)
[----------] 2 tests from AutomatonHasSymbolTest (1 ms total)

[----------] 5 tests from AutomatonRemoveSymbolTest
[ RUN      ] AutomatonRemoveSymbolTest.RemoveSymbol
[       OK ] AutomatonRemoveSymbolTest.RemoveSymbol (4 ms)
[ RUN      ] AutomatonRemoveSymbolTest.RemoveSymbol2
[       OK ] AutomatonRemoveSymbolTest.RemoveSymbol2 (1 ms)
[ RUN      ] AutomatonRemoveSymbolTest.RemoveSymbol3
[       OK ] AutomatonRemoveSymbolTest.RemoveSymbol3 (1 ms)
[ RUN      ] AutomatonRemoveSymbolTest.RemoveSymbo4
[       OK ] AutomatonRemoveSymbolTest.RemoveSymbo4 (4 ms)
[ RUN      ] AutomatonRemoveSymbolTest.RemoveSymbol5
[       OK ] AutomatonRemoveSymbolTest.RemoveSymbol5 (3 ms)
[----------] 5 tests from AutomatonRemoveSymbolTest (15 ms total)

[----------] 4 tests from AutomatonCountSymbol
[ RUN      ] AutomatonCountSymbol.CountSymbol0
[       OK ] AutomatonCountSymbol.CountSymbol0 (0 ms)
[ RUN      ] AutomatonCountSymbol.CountSymbol1
[       OK ] AutomatonCountSymbol.CountSymbol1 (0 ms)
[ RUN      ] AutomatonCountSymbol.CountSymbol3
[       OK ] AutomatonCountSymbol.CountSymbol3 (1 ms)
[ RUN      ] AutomatonCountSymbol.CountSymbol4
[       OK ] AutomatonCountSymbol.CountSymbol4 (1 ms)
[----------] 4 tests from AutomatonCountSymbol (4 ms total)

[----------] 5 tests from AutomatonAddStateTest
[ RUN      ] AutomatonAddStateTest.AddState1
[       OK ] AutomatonAddStateTest.AddState1 (0 ms)
[ RUN      ] AutomatonAddStateTest.AddStateMoins1
[       OK ] AutomatonAddStateTest.AddStateMoins1 (0 ms)
[ RUN      ] AutomatonAddStateTest.AddState0
[       OK ] AutomatonAddStateTest.AddState0 (0 ms)
[ RUN      ] AutomatonAddStateTest.AddStateDoublons1
[       OK ] AutomatonAddStateTest.AddStateDoublons1 (0 ms)
[ RUN      ] AutomatonAddStateTest.AddStateDoublons2
[       OK ] AutomatonAddStateTest.AddStateDoublons2 (0 ms)
[----------] 5 tests from AutomatonAddStateTest (3 ms total)

[----------] 4 tests from AutomatonRemoveStateTest
[ RUN      ] AutomatonRemoveStateTest.RemoveState0
[       OK ] AutomatonRemoveStateTest.RemoveState0 (1 ms)
[ RUN      ] AutomatonRemoveStateTest.RemoveState1
[       OK ] AutomatonRemoveStateTest.RemoveState1 (0 ms)
[ RUN      ] AutomatonRemoveStateTest.RemoveState2
[       OK ] AutomatonRemoveStateTest.RemoveState2 (3 ms)
[ RUN      ] AutomatonRemoveStateTest.RemoveState3
[       OK ] AutomatonRemoveStateTest.RemoveState3 (2 ms)
[----------] 4 tests from AutomatonRemoveStateTest (8 ms total)

[----------] 3 tests from AutomatonHasStateTest
[ RUN      ] AutomatonHasStateTest.HasState1
[       OK ] AutomatonHasStateTest.HasState1 (0 ms)
[ RUN      ] AutomatonHasStateTest.HasState0
[       OK ] AutomatonHasStateTest.HasState0 (0 ms)
[ RUN      ] AutomatonHasStateTest.NoState1
[       OK ] AutomatonHasStateTest.NoState1 (0 ms)
[----------] 3 tests from AutomatonHasStateTest (2 ms total)

[----------] 3 tests from AutomatonCountState
[ RUN      ] AutomatonCountState.CountState0
[       OK ] AutomatonCountState.CountState0 (0 ms)
[ RUN      ] AutomatonCountState.CountState1
[       OK ] AutomatonCountState.CountState1 (0 ms)
[ RUN      ] AutomatonCountState.CountState3
[       OK ] AutomatonCountState.CountState3 (0 ms)
[----------] 3 tests from AutomatonCountState (2 ms total)

[----------] 2 tests from AutomatonIsStateInitial
[ RUN      ] AutomatonIsStateInitial.IsStateInitial
[       OK ] AutomatonIsStateInitial.IsStateInitial (0 ms)
[ RUN      ] AutomatonIsStateInitial.IsNotStateInitial
[       OK ] AutomatonIsStateInitial.IsNotStateInitial (0 ms)
[----------] 2 tests from AutomatonIsStateInitial (1 ms total)

[----------] 2 tests from AutomatonIsStateFinal
[ RUN      ] AutomatonIsStateFinal.IsNotStateFinal
[       OK ] AutomatonIsStateFinal.IsNotStateFinal (0 ms)
[ RUN      ] AutomatonIsStateFinal.IsStateFinal
[       OK ] AutomatonIsStateFinal.IsStateFinal (0 ms)
[----------] 2 tests from AutomatonIsStateFinal (1 ms total)

[----------] 5 tests from AutomatonAddTransitionTest
[ RUN      ] AutomatonAddTransitionTest.AddTransitionSucceed
[       OK ] AutomatonAddTransitionTest.AddTransitionSucceed (0 ms)
[ RUN      ] AutomatonAddTransitionTest.AddTransitionFailedSymbol
[       OK ] AutomatonAddTransitionTest.AddTransitionFailedSymbol (1 ms)
[ RUN      ] AutomatonAddTransitionTest.AddTransitionFailedState
[       OK ] AutomatonAddTransitionTest.AddTransitionFailedState (0 ms)
[ RUN      ] AutomatonAddTransitionTest.AddTransitionFailedAlreadyAdded
[       OK ] AutomatonAddTransitionTest.AddTransitionFailedAlreadyAdded (1 ms)
[ RUN      ] AutomatonAddTransitionTest.AddEpsilonTransition
[       OK ] AutomatonAddTransitionTest.AddEpsilonTransition (0 ms)
[----------] 5 tests from AutomatonAddTransitionTest (5 ms total)

[----------] 5 tests from AutomatonRemoveTransitionTest
[ RUN      ] AutomatonRemoveTransitionTest.RemoveTransitionSucceed
[       OK ] AutomatonRemoveTransitionTest.RemoveTransitionSucceed (2 ms)
[ RUN      ] AutomatonRemoveTransitionTest.RemoveTransitionFailedSymbol
[       OK ] AutomatonRemoveTransitionTest.RemoveTransitionFailedSymbol (2 ms)
[ RUN      ] AutomatonRemoveTransitionTest.RemoveTransitionFailedSymbolAdded
[       OK ] AutomatonRemoveTransitionTest.RemoveTransitionFailedSymbolAdded (1 ms)
[ RUN      ] AutomatonRemoveTransitionTest.RemoveTransitionFailedState
[       OK ] AutomatonRemoveTransitionTest.RemoveTransitionFailedState (1 ms)
[ RUN      ] AutomatonRemoveTransitionTest.OneTransitionLeft
[       OK ] AutomatonRemoveTransitionTest.OneTransitionLeft (1 ms)
[----------] 5 tests from AutomatonRemoveTransitionTest (9 ms total)

[----------] 4 tests from AutomatonHasTransitionTest
[ RUN      ] AutomatonHasTransitionTest.HasTransitionSucceed
[       OK ] AutomatonHasTransitionTest.HasTransitionSucceed (1 ms)
[ RUN      ] AutomatonHasTransitionTest.HasTransitionFailedSymbol
[       OK ] AutomatonHasTransitionTest.HasTransitionFailedSymbol (1 ms)
[ RUN      ] AutomatonHasTransitionTest.HasTransitionFailedState
[       OK ] AutomatonHasTransitionTest.HasTransitionFailedState (1 ms)
[ RUN      ] AutomatonHasTransitionTest.HasTransitionFailedState2
[       OK ] AutomatonHasTransitionTest.HasTransitionFailedState2 (1 ms)
[----------] 4 tests from AutomatonHasTransitionTest (4 ms total)

[----------] 2 tests from AutomatonCountTransition
[ RUN      ] AutomatonCountTransition.CountTransition0
[       OK ] AutomatonCountTransition.CountTransition0 (0 ms)
[ RUN      ] AutomatonCountTransition.CountTransition1
[       OK ] AutomatonCountTransition.CountTransition1 (1 ms)
[----------] 2 tests from AutomatonCountTransition (1 ms total)

[----------] 2 tests from AutomatonCountTranstion
[ RUN      ] AutomatonCountTranstion.CountTransition3
[       OK ] AutomatonCountTranstion.CountTransition3 (1 ms)
[ RUN      ] AutomatonCountTranstion.CountTransition4
[       OK ] AutomatonCountTranstion.CountTransition4 (2 ms)
[----------] 2 tests from AutomatonCountTranstion (4 ms total)

[----------] 2 tests from AutomatonTestEpsilon
[ RUN      ] AutomatonTestEpsilon.HasEpsilonTransitionFailed
[       OK ] AutomatonTestEpsilon.HasEpsilonTransitionFailed (2 ms)
[ RUN      ] AutomatonTestEpsilon.HasEpsilonTransitionSucceed
[       OK ] AutomatonTestEpsilon.HasEpsilonTransitionSucceed (2 ms)
[----------] 2 tests from AutomatonTestEpsilon (4 ms total)

[----------] 5 tests from AutomatonIsDeterministic
[ RUN      ] AutomatonIsDeterministic.IsDeterministic1
[       OK ] AutomatonIsDeterministic.IsDeterministic1 (2 ms)
[ RUN      ] AutomatonIsDeterministic.IsDeterministic2
[       OK ] AutomatonIsDeterministic.IsDeterministic2 (1 ms)
[ RUN      ] AutomatonIsDeterministic.IsDeterministic3
[       OK ] AutomatonIsDeterministic.IsDeterministic3 (1 ms)
[ RUN      ] AutomatonIsDeterministic.IsDeterministic4
[       OK ] AutomatonIsDeterministic.IsDeterministic4 (1 ms)
[ RUN      ] AutomatonIsDeterministic.GoodChahat
[       OK ] AutomatonIsDeterministic.GoodChahat (1 ms)
[----------] 5 tests from AutomatonIsDeterministic (9 ms total)

[----------] 2 tests from AutomatonIsComplete
[ RUN      ] AutomatonIsComplete.IsCompleteFailed
[       OK ] AutomatonIsComplete.IsCompleteFailed (2 ms)
[ RUN      ] AutomatonIsComplete.IsCompleteSucceed
[       OK ] AutomatonIsComplete.IsCompleteSucceed (2 ms)
[----------] 2 tests from AutomatonIsComplete (4 ms total)

[----------] 4 tests from AutomatonCreateComplete
[ RUN      ] AutomatonCreateComplete.CreateCompleteAlreadyCompleted
[       OK ] AutomatonCreateComplete.CreateCompleteAlreadyCompleted (16 ms)
[ RUN      ] AutomatonCreateComplete.CreateCompleteSucceed
[       OK ] AutomatonCreateComplete.CreateCompleteSucceed (13 ms)
[ RUN      ] AutomatonCreateComplete.CreateCompleteSucceed2
[       OK ] AutomatonCreateComplete.CreateCompleteSucceed2 (9 ms)
[ RUN      ] AutomatonCreateComplete.NotCreatingNewState
[       OK ] AutomatonCreateComplete.NotCreatingNewState (3 ms)
[----------] 4 tests from AutomatonCreateComplete (43 ms total)

[----------] 4 tests from AutomatonCreateComplement
[ RUN      ] AutomatonCreateComplement.AlreadyCompleteAndDeterministic
[       OK ] AutomatonCreateComplement.AlreadyCompleteAndDeterministic (9 ms)
[ RUN      ] AutomatonCreateComplement.NotCompleteAndNoDeterministic
[       OK ] AutomatonCreateComplement.NotCompleteAndNoDeterministic (17 ms)
[ RUN      ] AutomatonCreateComplement.ComplementTwice
[       OK ] AutomatonCreateComplement.ComplementTwice (12 ms)
[ RUN      ] AutomatonCreateComplement.NoInitialState
[       OK ] AutomatonCreateComplement.NoInitialState (5 ms)
[----------] 4 tests from AutomatonCreateComplement (46 ms total)

[----------] 3 tests from AutomatonCreateMirror
[ RUN      ] AutomatonCreateMirror.CreateMirrorAndIsCompleted
[       OK ] AutomatonCreateMirror.CreateMirrorAndIsCompleted (9 ms)
[ RUN      ] AutomatonCreateMirror.CreateMirrorNotCompleted
[       OK ] AutomatonCreateMirror.CreateMirrorNotCompleted (7 ms)
[ RUN      ] AutomatonCreateMirror.CreateMirrorInitialsAndFinals
[       OK ] AutomatonCreateMirror.CreateMirrorInitialsAndFinals (7 ms)
[----------] 3 tests from AutomatonCreateMirror (24 ms total)

[----------] 8 tests from AutomatonIsLanguageEmpty
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyNoInitialState
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyNoInitialState (1 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyNoFinalState
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyNoFinalState (1 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyTrue
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyTrue (4 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalse
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalse (2 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalseInitialStateIsFinal
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalseInitialStateIsFinal (1 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalseMultipleInitial
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyFalseMultipleInitial (1 ms)
[ RUN      ] AutomatonIsLanguageEmpty.IsLanguageEmptyWord
[       OK ] AutomatonIsLanguageEmpty.IsLanguageEmptyWord (0 ms)
[ RUN      ] AutomatonIsLanguageEmpty.NonDeterministicTest
+-------------------------------------------------------------+
| ATTENTION ! ATTENTION ! ATTENTION ! ATTENTION ! ATTENTION ! |
| Votre test utilise une fonction non-sûre ! C'est interdit ! |
| La fonction non-sûre que vous appelez est:                  |
|   isDeterministic                                           |
| Ce gentil message sera remplacé par un méchant assert.      |
| Corrigez votre test sous peine d'avoir zéro.                |
+-------------------------------------------------------------+
[       OK ] AutomatonIsLanguageEmpty.NonDeterministicTest (13 ms)
[----------] 8 tests from AutomatonIsLanguageEmpty (28 ms total)

[----------] 5 tests from AutomatonRemoveNonAccessibleStates
[ RUN      ] AutomatonRemoveNonAccessibleStates.NoInitialState
[       OK ] AutomatonRemoveNonAccessibleStates.NoInitialState (4 ms)
[ RUN      ] AutomatonRemoveNonAccessibleStates.NonAccessibleOnlyState
[       OK ] AutomatonRemoveNonAccessibleStates.NonAccessibleOnlyState (3 ms)
[ RUN      ] AutomatonRemoveNonAccessibleStates.HasOnlyAccessibleState
[       OK ] AutomatonRemoveNonAccessibleStates.HasOnlyAccessibleState (2 ms)
[ RUN      ] AutomatonRemoveNonAccessibleStates.LastStateNonAccessible
[       OK ] AutomatonRemoveNonAccessibleStates.LastStateNonAccessible (2 ms)
[ RUN      ] AutomatonRemoveNonAccessibleStates.NonAccessibleEnBoucle
[       OK ] AutomatonRemoveNonAccessibleStates.NonAccessibleEnBoucle (3 ms)
[----------] 5 tests from AutomatonRemoveNonAccessibleStates (16 ms total)

[----------] 5 tests from AutomatonRemoveNonCoAccessibleStates
[ RUN      ] AutomatonRemoveNonCoAccessibleStates.NoFinalState
[       OK ] AutomatonRemoveNonCoAccessibleStates.NoFinalState (3 ms)
[ RUN      ] AutomatonRemoveNonCoAccessibleStates.HasOnlyCoAccessibleState
[       OK ] AutomatonRemoveNonCoAccessibleStates.HasOnlyCoAccessibleState (1 ms)
[ RUN      ] AutomatonRemoveNonCoAccessibleStates.FirstStateNonCoAccessible
[       OK ] AutomatonRemoveNonCoAccessibleStates.FirstStateNonCoAccessible (2 ms)
[ RUN      ] AutomatonRemoveNonCoAccessibleStates.NonCoAccessibleEnChaine
[       OK ] AutomatonRemoveNonCoAccessibleStates.NonCoAccessibleEnChaine (2 ms)
[ RUN      ] AutomatonRemoveNonCoAccessibleStates.NonCoAccessibleOnlyState
[       OK ] AutomatonRemoveNonCoAccessibleStates.NonCoAccessibleOnlyState (1 ms)
[----------] 5 tests from AutomatonRemoveNonCoAccessibleStates (12 ms total)

[----------] 10 tests from AutomatonCreateProduct
[ RUN      ] AutomatonCreateProduct.NonDeterministicAndSamesAutomatons
[       OK ] AutomatonCreateProduct.NonDeterministicAndSamesAutomatons (4 ms)
[ RUN      ] AutomatonCreateProduct.NonDeterministicAndSameAutomata
[       OK ] AutomatonCreateProduct.NonDeterministicAndSameAutomata (3 ms)
[ RUN      ] AutomatonCreateProduct.EmptyProduct
[       OK ] AutomatonCreateProduct.EmptyProduct (4 ms)
[ RUN      ] AutomatonCreateProduct.EmptyProductbutMatchEmptyWord
[       OK ] AutomatonCreateProduct.EmptyProductbutMatchEmptyWord (4 ms)
[ RUN      ] AutomatonCreateProduct.InitialsAreFinalsToo
[       OK ] AutomatonCreateProduct.InitialsAreFinalsToo (4 ms)
[ RUN      ] AutomatonCreateProduct.BasicExemple
[       OK ] AutomatonCreateProduct.BasicExemple (4 ms)
[ RUN      ] AutomatonCreateProduct.BasicExemple2
[       OK ] AutomatonCreateProduct.BasicExemple2 (4 ms)
[ RUN      ] AutomatonCreateProduct.LoopOnExistingState
[       OK ] AutomatonCreateProduct.LoopOnExistingState (5 ms)
[ RUN      ] AutomatonCreateProduct.LHSLanguageIsEmpty
[       OK ] AutomatonCreateProduct.LHSLanguageIsEmpty (3 ms)
[ RUN      ] AutomatonCreateProduct.RHSLanguageIsEmpty
[       OK ] AutomatonCreateProduct.RHSLanguageIsEmpty (3 ms)
[----------] 10 tests from AutomatonCreateProduct (42 ms total)

[----------] 9 tests from HasEmptyIntersectionWith
[ RUN      ] HasEmptyIntersectionWith.NonDeterministicAndSameAsAutomaton
[       OK ] HasEmptyIntersectionWith.NonDeterministicAndSameAsAutomaton (3 ms)
[ RUN      ] HasEmptyIntersectionWith.NonDeterministicAndSameAutomaton
[       OK ] HasEmptyIntersectionWith.NonDeterministicAndSameAutomaton (1 ms)
[ RUN      ] HasEmptyIntersectionWith.EmptyProduct
[       OK ] HasEmptyIntersectionWith.EmptyProduct (2 ms)
[ RUN      ] HasEmptyIntersectionWith.InitialsAndFinals
[       OK ] HasEmptyIntersectionWith.InitialsAndFinals (2 ms)
[ RUN      ] HasEmptyIntersectionWith.BasicExemple
[       OK ] HasEmptyIntersectionWith.BasicExemple (2 ms)
[ RUN      ] HasEmptyIntersectionWith.BasicExemple2
[       OK ] HasEmptyIntersectionWith.BasicExemple2 (2 ms)
[ RUN      ] HasEmptyIntersectionWith.LoopOnExistingState
[       OK ] HasEmptyIntersectionWith.LoopOnExistingState (3 ms)
[ RUN      ] HasEmptyIntersectionWith.LHSLanguageIsEmpty
[       OK ] HasEmptyIntersectionWith.LHSLanguageIsEmpty (2 ms)
[ RUN      ] HasEmptyIntersectionWith.RHSLanguageIsEmpty
[       OK ] HasEmptyIntersectionWith.RHSLanguageIsEmpty (2 ms)
[----------] 9 tests from HasEmptyIntersectionWith (24 ms total)

[----------] 16 tests from ReadString
[ RUN      ] ReadString.EmptyStringNormalAutomaton
[       OK ] ReadString.EmptyStringNormalAutomaton (2 ms)
[ RUN      ] ReadString.ReadA_NormalAutomaton
[       OK ] ReadString.ReadA_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadA_NormalAutomaton2
[       OK ] ReadString.ReadA_NormalAutomaton2 (1 ms)
[ RUN      ] ReadString.ReadB_NormalAutomaton
[       OK ] ReadString.ReadB_NormalAutomaton (2 ms)
[ RUN      ] ReadString.ReadAB_NormalAutomaton
[       OK ] ReadString.ReadAB_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadBA_NormalAutomaton
[       OK ] ReadString.ReadBA_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadAA_NormalAutomaton
[       OK ] ReadString.ReadAA_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadAAA_NormalAutomaton
[       OK ] ReadString.ReadAAA_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadC_NormalAutomaton
[       OK ] ReadString.ReadC_NormalAutomaton (1 ms)
[ RUN      ] ReadString.ReadA_NoInitialState
[       OK ] ReadString.ReadA_NoInitialState (1 ms)
[ RUN      ] ReadString.ReadA_TwoInitialsStates
[       OK ] ReadString.ReadA_TwoInitialsStates (2 ms)
[ RUN      ] ReadString.ReadB_TwoInitialsStates
[       OK ] ReadString.ReadB_TwoInitialsStates (2 ms)
[ RUN      ] ReadString.ReadBA_TwoInitialsStates
[       OK ] ReadString.ReadBA_TwoInitialsStates (2 ms)
[ RUN      ] ReadString.ReadAB_TwoInitialsStates
[       OK ] ReadString.ReadAB_TwoInitialsStates (2 ms)
[ RUN      ] ReadString.ReadAA_TwoInitialsStates
[       OK ] ReadString.ReadAA_TwoInitialsStates (2 ms)
[ RUN      ] ReadString.ReadAAA_TwoInitialsStates
[       OK ] ReadString.ReadAAA_TwoInitialsStates (2 ms)
[----------] 16 tests from ReadString (35 ms total)

[----------] 14 tests from Match
[ RUN      ] Match.EmptyStringNormalAutomaton
[       OK ] Match.EmptyStringNormalAutomaton (1 ms)
[ RUN      ] Match.MatchA_NormalAutomaton
[       OK ] Match.MatchA_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadA_NormalAutomaton2
[       OK ] Match.ReadA_NormalAutomaton2 (1 ms)
[ RUN      ] Match.ReadB_NormalAutomaton
[       OK ] Match.ReadB_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadAB_NormalAutomaton
[       OK ] Match.ReadAB_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadBA_NormalAutomaton
[       OK ] Match.ReadBA_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadAA_NormalAutomaton
[       OK ] Match.ReadAA_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadAAA_NormalAutomaton
[       OK ] Match.ReadAAA_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadC_NormalAutomaton
[       OK ] Match.ReadC_NormalAutomaton (1 ms)
[ RUN      ] Match.ReadAAA_TwoInitialsStates
[       OK ] Match.ReadAAA_TwoInitialsStates (2 ms)
[ RUN      ] Match.ReadAB_TwoInitialsStates
[       OK ] Match.ReadAB_TwoInitialsStates (2 ms)
[ RUN      ] Match.ReadA_NoItialState
[       OK ] Match.ReadA_NoItialState (1 ms)
[ RUN      ] Match.ReadA_NoFinalState
[       OK ] Match.ReadA_NoFinalState (1 ms)
[ RUN      ] Match.ReadEmpty_InitialIsFinal
[       OK ] Match.ReadEmpty_InitialIsFinal (1 ms)
[----------] 14 tests from Match (24 ms total)

[----------] 7 tests from IsIncludedIn
[ RUN      ] IsIncludedIn.SameAutomaton
[       OK ] IsIncludedIn.SameAutomaton (3 ms)
[ RUN      ] IsIncludedIn.WithHisComplement
[       OK ] IsIncludedIn.WithHisComplement (2 ms)
[ RUN      ] IsIncludedIn.ExactlySameAlphabetWithOneTransition
[       OK ] IsIncludedIn.ExactlySameAlphabetWithOneTransition (2 ms)
[ RUN      ] IsIncludedIn.NotExactlySameAlphabet
[       OK ] IsIncludedIn.NotExactlySameAlphabet (3 ms)
[ RUN      ] IsIncludedIn.Reverse
[       OK ] IsIncludedIn.Reverse (2 ms)
[ RUN      ] IsIncludedIn.NotExactlySameAlphabet2
[       OK ] IsIncludedIn.NotExactlySameAlphabet2 (3 ms)
[ RUN      ] IsIncludedIn.Reverse2
[       OK ] IsIncludedIn.Reverse2 (3 ms)
[----------] 7 tests from IsIncludedIn (21 ms total)

[----------] 3 tests from CreateDeterministic
[ RUN      ] CreateDeterministic.TwoInitialsState
[       OK ] CreateDeterministic.TwoInitialsState (6 ms)
[ RUN      ] CreateDeterministic.NoInitialState
[       OK ] CreateDeterministic.NoInitialState (3 ms)
[ RUN      ] CreateDeterministic.AlreadyDeterministic
[       OK ] CreateDeterministic.AlreadyDeterministic (5 ms)
[----------] 3 tests from CreateDeterministic (15 ms total)

[----------] 5 tests from CreateMinimalMoore
[ RUN      ] CreateMinimalMoore.NoInitialState
[       OK ] CreateMinimalMoore.NoInitialState (12 ms)
[ RUN      ] CreateMinimalMoore.TDMinimal1AlreadyMinimal
[       OK ] CreateMinimalMoore.TDMinimal1AlreadyMinimal (11 ms)
[ RUN      ] CreateMinimalMoore.TDMinimal2
[       OK ] CreateMinimalMoore.TDMinimal2 (8 ms)
[ RUN      ] CreateMinimalMoore.TDMinimal3
[       OK ] CreateMinimalMoore.TDMinimal3 (12 ms)
[ RUN      ] CreateMinimalMoore.TDMinimal4
[       OK ] CreateMinimalMoore.TDMinimal4 (7 ms)
[----------] 5 tests from CreateMinimalMoore (51 ms total)

[----------] 5 tests from CreateMinimalBrzozowski
[ RUN      ] CreateMinimalBrzozowski.NoInitialState
/home/jube/Univ/theorie_des_langages/projet/corr/2022/sandbox-tests/testfa.cc:3484: Failure
Expected equality of these values:
  fa_minimalBrzozowski.countStates()
    Which is: 1
  2u
    Which is: 2
[  FAILED  ] CreateMinimalBrzozowski.NoInitialState (19 ms)
[ RUN      ] CreateMinimalBrzozowski.MinimalAlreadyMinimal
[       OK ] CreateMinimalBrzozowski.MinimalAlreadyMinimal (9 ms)
[ RUN      ] CreateMinimalBrzozowski.Minimal1
[       OK ] CreateMinimalBrzozowski.Minimal1 (7 ms)
[ RUN      ] CreateMinimalBrzozowski.Minimal2
[       OK ] CreateMinimalBrzozowski.Minimal2 (10 ms)
[ RUN      ] CreateMinimalBrzozowski.Minimal3
[       OK ] CreateMinimalBrzozowski.Minimal3 (7 ms)
[----------] 5 tests from CreateMinimalBrzozowski (54 ms total)

[----------] Global test environment tear-down
[==========] 160 tests from 33 test suites ran. (560 ms total)
[  PASSED  ] 159 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] CreateMinimalBrzozowski.NoInitialState

 1 FAILED TEST
==248276== 
==248276== HEAP SUMMARY:
==248276==     in use at exit: 0 bytes in 0 blocks
==248276==   total heap usage: 15,269 allocs, 15,269 frees, 1,096,010 bytes allocated
==248276== 
==248276== All heap blocks were freed -- no leaks are possible
==248276== 
==248276== For lists of detected and suppressed errors, rerun with: -s
==248276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
